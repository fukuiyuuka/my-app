
■HTTPS通信とHTTP通信の違い

・中身を暗号化しているかどうかの違い。他は大差ないらしい。
・HTTPS = HTTP + TLS

■暗号化の方法

・共通鍵を使って暗号化

・どのように共通鍵を共有する？
	・クライアント側で生成
	・サーバから公開鍵（SSL証明書）を受け取る
	・サーバ側の公開鍵を使って共通鍵を暗号化し、サーバ側に送る。
	・サーバ側で秘密鍵を使って共通鍵を複合化
		→この流れで行う暗号化通信方式をTLSという。（ハイブリッド暗号方式）
※上記はRSA方式（TLS 1.2以前）で、今はもっと複雑な方法（Diffie-Hellman鍵共有（ECDHE）,TLS1.3以降）で共通鍵を共有するらしい。
この方式では「通信の過程をすべて盗まれても、後から復号されることはない」（前方秘匿性）

・これらのやり取りは、HTTPS通信で初回通信時に自動的に行われる。（TLSハンドシェイク）

■HTTPS通信を実装するには？

・サーバ側で証明書を用意すればいい。
・あとはコードを少し変えれば、通信ライブラリがいい感じにやってくれる。

■証明書

・SSL証明書＝公開鍵がかかれたもの。

・以下の2種類がある。
	
	・認証局で発行してもらう証明書：信頼性高。本番環境はこれ。
		・認証局のデジタル署名が入っている。
		・デジタル署名とは？：証明書の内容（公開鍵など）の情報をハッシュ化したものを、秘密鍵で暗号化したもの。
		・デジタル署名をどう使うか？：「デジタル署名を公開鍵で復号化できた」=「その公開鍵を持つサーバが発行した」
		・ブラウザはデフォルトで認証局の公開鍵を保持しているので、それを使って証明書を検証する。

	・自己署名証明書：ただの公開鍵の情報。勝手に発行できるが、信頼はされない。テスト環境はこれでもいい。

■その他用語
・TLS
	・Web通信（HTTP通信）において、公開鍵暗号方式を使って共通鍵を安全に共有することで、暗号化通信を実現するプロトコル。
	・公開鍵の信頼性は、認証局のデジタル署名で保証
	・通信の暗号化＋認証＋改ざん検出を行う
・SSL
	・TLSの前身。脆弱性があり、今は使われていない。名前だけが残っている感じ。
・SSH
	・リモート端末操作やファイル転送のための暗号化通信プロトコル
	・単体でも使われるが、他のプロトコル（scp、sftpなど）とも併用される。
	・通信の暗号化＋認証＋改ざん検出のほか、ユーザー認証（パスワード or 公開鍵）も行う。